1
00:00:15,950 --> 00:00:17,006
Hello everyone． 

2
00:00:17,006 --> 00:00:19,330
In the software‚ radio‚ radio‚ dapp room． 

3
00:00:19,330 --> 00:00:21,020
First time 2022． 

4
00:00:21,350 --> 00:00:22,120
Good morning． 

5
00:00:22,120 --> 00:00:24,440
Good afternoon and good evening． 

6
00:00:25,150 --> 00:00:31,240
My name is Xian junjiao and I'm from ID Lab iMac and Gent University Belgium． 

7
00:00:32,170 --> 00:00:36,770
Let's talk about the open WiFi project again‚ like we did in every year． 

8
00:00:36,780 --> 00:00:39,000
First time since 2020． 

9
00:00:40,590 --> 00:00:43,820
It's the yearly update of the open WiFi project． 

10
00:00:44,180 --> 00:00:46,950
If you also talk about the future plan‚ plan． 

11
00:00:47,870 --> 00:00:49,740
In case there are new audiences． 

12
00:00:50,560 --> 00:00:53,080
Let me tell you what open WiFi is． 

13
00:00:53,560 --> 00:00:58,040
It is an open source WiFi chip design project written in verylog． 

14
00:00:58,690 --> 00:01:05,160
It's already functioning on the IPG board and can be used like a real WiFi card． 

15
00:01:05,170 --> 00:01:16,750
On the Linux‚ for instance‚ you can log in to the FPG board via SSH over Internet and operate the WiFi card like you do on resperry pie． 

16
00:01:17,270 --> 00:01:19,900
Just search Open my phone on the internet． 

17
00:01:20,070 --> 00:01:22,760
I believe you will find our project． 

18
00:01:23,730 --> 00:01:27,460
The project was online at the end of 2019． 

19
00:01:27,950 --> 00:01:32,150
After that‚ it keeps attracting attention along with time． 

20
00:01:32,640 --> 00:01:37,760
As in this star history figure‚ it increases almost linearly． 

21
00:01:37,770 --> 00:01:39,710
In the past two years． 

22
00:01:40,310 --> 00:01:42,620
There are two leaps in the figure． 

23
00:01:42,760 --> 00:01:52,610
Probably the first leap was due to the report by CN X Software News‚ and the second one was because of Hacker News Report report． 

24
00:01:54,630 --> 00:01:58,880
The first part is about the features and optimizations． 

25
00:01:58,890 --> 00:02:00,270
In the past year． 

26
00:02:01,050 --> 00:02:11,250
I have to admit that some of them are more complicated than our imagination‚ so the planned release was delayed several times． 

27
00:02:11,280 --> 00:02:19,710
Actually‚ no formal release in the past year‚ except some bug fixes and some small improvements． 

28
00:02:20,710 --> 00:02:23,340
Maybe at the presentation moment． 

29
00:02:23,680 --> 00:02:38,340
These works are still not released yet‚ but we have confidence to release these works in February 2022 because we have solved most of the issues after struggling more than one year． 

30
00:02:39,420 --> 00:02:43,890
The first feature is about the ampdu and block arc． 

31
00:02:45,500 --> 00:02:56,860
A M PDU stands for aggregated Mac P U‚ it allows the WiFi card to put multiple micro Pdus to a single physical layer packet． 

32
00:02:57,420 --> 00:03:03,750
So the gap and acknowledgment procedure after each macpdu is eliminated． 

33
00:03:04,980 --> 00:03:09,830
Apparently‚ because of this‚ transmission efficiency can be increased a lot． 

34
00:03:10,990 --> 00:03:17,040
This is an important feature introduced in WiFi 4 8 O2 dot 11 n． 

35
00:03:17,800 --> 00:03:41,880
It is optional in WiFi 4‚ but it has become mandatory since WiFi 5 8 O2 dot 11 AC‚ even if there's only one Mac PDU to be sent in WiFi 5‚ it has to be encapsulated in the A M PDU format‚ which is called single packet A m PDU． 

36
00:03:43,460 --> 00:03:49,160
Accordingly‚ the block act block acknowledgment was introduced as well． 

37
00:03:49,160 --> 00:04:05,420
In WiFi 4‚ it allows the WiFi card to aggregate the multiple acknowledgments into one big acknowledgment packet so that the acknowledgment for every single Mac PDU is not needed anymore． 

38
00:04:06,350 --> 00:04:16,230
Apparently‚ this will also increase the transmission efficiency‚ especially when it is used together with the amptu． 

39
00:04:18,350 --> 00:04:28,590
In the actual implementation‚ when Linux handles a Mac PDU to WiFi card‚ it only labels the packet that it can be aggregated or not． 

40
00:04:29,100 --> 00:04:36,420
Whether the packet will actually be aggregated and how many my Pdus will be aggregated． 

41
00:04:36,990 --> 00:04:52,830
It is the WiFi car's decision‚ not Linux‚ because only the card knows the exact transmission opportunity and how many specific packets in specific queues at that moment in the card． 

42
00:04:53,180 --> 00:05:01,670
So the A m PDU implementation involves quite a lot of FPJ work and not as simple as the concept． 

43
00:05:03,290 --> 00:05:12,460
And because of the aggregation capability‚ more packets can come in and go out in a short period of time for WiFi cards． 

44
00:05:13,150 --> 00:05:22,420
So it triggered some hidden box of our design‚ which is not seen before when the packet density is not that high． 

45
00:05:22,990 --> 00:05:28,650
Next‚ let's talk about a feature about WiFi privacy and security． 

46
00:05:29,320 --> 00:05:40,050
The CSI father CSI means the channel state information‚ which is available in the channel estimation module inside the WiFi receiver． 

47
00:05:41,560 --> 00:05:50,640
This is a refined and reflected feature based on the CSI Murder work we reported last year together with our partner． 

48
00:05:51,790 --> 00:05:57,020
Now you can use this feature with the open WiFi public release out of the box． 

49
00:05:57,740 --> 00:05:59,240
The idea is simple． 

50
00:06:00,010 --> 00:06:07,310
You can configure an artificial channel state information to the WiFi signal before it leaves the transmitter antenna． 

51
00:06:08,250 --> 00:06:17,280
Actually‚ it is a configurable F IR filter in between the WiFi baseband OFDM transmitter and the antenna． 

52
00:06:18,460 --> 00:06:40,260
And this operation won't destroy the normal WiFi communication because the receiver will do channel estimation and equalization anyway‚ no matter if the channel is the real environment channel or real environment channel combined with the artificial channel added inside the transmitter． 

53
00:06:41,430 --> 00:07:24,130
But for those sensing receivers that rely on the CSI reflecting‚ reflecting the real environment‚ the sensing won't work anymore because they don't know what kind of artificial CSI is added at the transmitter and only see a combined CSI and a receiver‚ which never reflect the real environment channel for authorized sensing receiver who knows the artificial CSI‚ they can recover the environment CSI from the combined CSI observed in the receiver． 

54
00:07:25,020 --> 00:07:30,720
You can find our Y SEC 21 paper‚ and the application note on GitHub． 

55
00:07:32,830 --> 00:07:58,070
The CSI father is actually manipulating the signal in the traditional security research fuzzing area‚ where people manipulate the bit in the WiFi PDU‚ there is an open WiFi based father called O W Fuss‚ which is developed by researchers in Alipay‚ which is part of Alibaba． 

56
00:08:00,220 --> 00:08:06,540
As you can see on their website‚ some CDS are disclosed already． 

57
00:08:08,460 --> 00:08:12,140
Next thing is about simple TX diversity． 

58
00:08:13,020 --> 00:08:23,890
Since many platforms have two TX attenders‚ a simple door alternative X diversity can be achieved with a tiny extra footprint． 

59
00:08:24,900 --> 00:08:32,340
It is almost identical to the CSD cyclic shift diversity defined in the WiFi standard． 

60
00:08:34,120 --> 00:08:41,860
To explain how it works‚ let's think about what happens if we fit the same or FDM symbol． 

61
00:08:41,920 --> 00:08:45,270
A signal to 2 attendance directly． 

62
00:08:46,120 --> 00:08:48,970
This is the simplest been forming case． 

63
00:08:50,240 --> 00:08:58,730
If the attendance bacing is appropriate‚ it could form a beam towards the right direction in the figure． 

64
00:09:00,030 --> 00:09:12,020
Then the problem is that for those stations in other directions‚ bad signals will be experienced because they are not in the main loop‚ they are in the side lobe． 

65
00:09:13,180 --> 00:09:21,470
What happens if we simply had a fixed time domain delay before the signal is sent to one of the attenders? 

66
00:09:22,960 --> 00:09:37,700
Amazing things will happen as we know that the OFDM signal includes multiple subcarriers‚ and different sub carriers actually means different frequencies． 

67
00:09:38,720 --> 00:09:45,900
The fixed time domain delay for different frequencies actually means different phase shifts． 

68
00:09:46,760 --> 00:09:55,400
Think about the fixed delay versus different or nonfixed period of different subcarriers． 

69
00:09:57,280 --> 00:10:10,860
According to the beam forming principle‚ the different face shift will generate beams towards different directions‚ So energy is delivered the different directions by different sub carriers． 

70
00:10:11,890 --> 00:10:23,270
In this case‚ no matter where the station is‚ it will have more or less the same signal strength‚ except that different sub carriers are received in different power levels． 

71
00:10:24,320 --> 00:10:25,720
But it is okay． 

72
00:10:26,170 --> 00:10:35,670
The WiFi receiver is supposed to work in frequency selective situations and it is the nature of the multipass environment． 

73
00:10:36,890 --> 00:10:49,370
The four color subcarriers and beams are just an inaccurate example here in the figure‚ the accurate analysis need to consider the multi plus fading in the environment． 

74
00:10:51,090 --> 00:10:57,330
There are also lots of enhancements and optimizations in architectural and low level． 

75
00:10:57,490 --> 00:11:04,990
For instance‚ the receiver has improved a lot for better demodulation capability sensitivity． 

76
00:11:05,910 --> 00:11:08,690
Also‚ the clocking scheme has been improved． 

77
00:11:09,810 --> 00:11:38,260
This is the clocking scheme before the RF clock ends at the baseband 5‚ and the baseband has its own clock‚ which is generated in the clock unit unit inside the arm processor A 5 4 writing reading rate control is needed to avoid IQ sample overflow or underflow due to the slight clocking speed difference between RF and IPG base baseband． 

78
00:11:39,190 --> 00:11:43,550
They have totally‚ totally independent crystal． 

79
00:11:44,680 --> 00:11:54,930
No‚ the RF clock drives everything from RFA‚ DCD AC to the open FA base band‚ till the DMA to the arm． 

80
00:11:55,780 --> 00:12:04,910
This leads to a more simplified cross clock domain design in the baseband and lower the timing jitter． 

81
00:12:05,790 --> 00:12:11,280
The actual cross clock domain happens inside the unprocessor DMA controller． 

82
00:12:11,670 --> 00:12:14,130
So it's not our business anymore． 

83
00:12:15,490 --> 00:12:24,580
Other optimizations are for helping people generate the project use and use the open WiFi card in a more easy way． 

84
00:12:26,370 --> 00:12:36,940
Now you have fewer steps than before to generate the IPG design project in vivado with the help of more functionalities in the script． 

85
00:12:38,330 --> 00:12:45,460
Many low level Mac and file configurations now can be simply set via a single register operation． 

86
00:12:46,100 --> 00:12:59,820
We also add test mode to the driver for easy experimental feature test and benchmarking by avoiding recompile the driver to switch between normal and experimental． 

87
00:13:01,990 --> 00:13:13,430
More importantly‚ after having all about features and optimizations‚ the whole design consumes less MP G resources than the previous release release． 

88
00:13:14,560 --> 00:13:23,650
Because we have put lots of effort into optimizing the design footprint to make sure it can fit into the entry level． 

89
00:13:23,660 --> 00:13:34,460
Zinc 7 or 20 IP GA‚ we really care about the entry level IPD board support because it is essential to help more users． 

90
00:13:35,820 --> 00:13:42,620
The name of the new release will be will seller‚ which is a beautiful place next to Leuven Belgium． 

91
00:13:43,330 --> 00:14:13,820
It is chosen by the main developer of the A M PDU feature mihail mahari from the vivado report for the entry level Z board‚ which has the zinc‚ some O 20 ipga‚ there are 10% reduction for the lookout table resource‚ 21% reduction for the flip flop‚ 6% reduction for the block Ram‚ and 26% reduction for the DSP blocks． 

92
00:14:14,470 --> 00:14:22,610
So for users who have the entry level ipja board‚ you are safe to have more open WiFi features． 

93
00:14:24,180 --> 00:14:28,170
Now let's talk about the bug fixes in the past year． 

94
00:14:28,310 --> 00:14:43,360
There are bugs about the duration field contention window increment mechanism too fast‚ 5 TX start signal time stamp issue with the IQ sample capture‚ which is reported by our user． 

95
00:14:43,970 --> 00:15:09,950
The short training frame‚ power level issue‚ and of course‚ the hidden bug seen by the high packet density brought by the a m PTU The complication is mainly due to the asynchronous nature of the CPU interrupt and IPG operation and effort of maintaining the related buffers and queues． 

96
00:15:10,110 --> 00:15:15,980
Lots of corner cases there in asynchronous system running in real time． 

97
00:15:17,200 --> 00:15:19,390
Let's take a look at the duration field． 

98
00:15:19,390 --> 00:15:20,010
Field issue． 

99
00:15:20,820 --> 00:15:37,360
The duration field in the WiFi packet indicates how much time occupation left is expected for the ongoing transaction‚ so other knows can predict when the channel will be released by the current traffic． 

100
00:15:38,090 --> 00:16:00,010
The Linux kernel Mag 8 to 11 module‚ as shown in the Linux kernel source code on this slide‚ calculates the value for this field only for 11 A and G‚ starting from 11 n‚ it assumes hardware handle this‚ which means starting from WiFi． 

101
00:16:00,240 --> 00:16:11,540
Four more functionalities are pushed to the chip instead of doing it at the kernel level‚ as you can see in the function． 

102
00:16:12,430 --> 00:16:15,780
If it's wi fi for and above the function‚ return immediately． 

103
00:16:16,800 --> 00:16:26,380
That's why at the beginning we weren't aware of this and always see the 11 N packet transmitted by open WiFi has duration field value 0． 

104
00:16:27,390 --> 00:16:31,680
Now we have implemented the calculation in open WiFi correctly． 

105
00:16:33,840 --> 00:16:38,180
Now‚ let's see some test results by a decent WiFi tester． 

106
00:16:38,190 --> 00:16:41,630
Road on swaths CMW 270． 

107
00:16:42,110 --> 00:16:51,540
It's probably the most advanced tester‚ which supports all WiFi standards and all subsix gigers frequencies． 

108
00:16:51,670 --> 00:16:54,910
Even those frequencies other than 2．4 and 5 gigers． 

109
00:16:56,330 --> 00:17:05,040
This is the basic test test set up on the left are the tester and open WiFi board‚ connected via Co X cable． 

110
00:17:05,330 --> 00:17:09,000
On the right are those are some screenshots． 

111
00:17:09,350 --> 00:17:13,550
The spectrum mask‚ EBM‚ time‚ time‚ domain‚ power‚ etcetera． 

112
00:17:14,560 --> 00:17:23,330
We have tested the open WiFi R sensitivity via the tester after our efforts of optimizing the baseband I PJ receiver． 

113
00:17:24,270 --> 00:17:34,310
The main conclusion is that the sensitivity is much better than the standard required‚ and similar to those typical commercial WiFi for chips． 

114
00:17:35,320 --> 00:17:37,530
EDM is also quite good． 

115
00:17:38,120 --> 00:17:43,890
It achieves -39 d B with a big spectrum mask margin． 

116
00:17:44,710 --> 00:18:20,340
It is as expected since 89 3 6 1 is a quite good and also quite expensive RF chip‚ and there is no external power amplifier in our test‚ which is‚ usually harmful for EDM‚ but we don't have PA if we sacrifice some spectrum mask margin further‚ the EDM can even achieve -41 d B‚ which is already capable of running 4K core modulation of WiFi 7． 

117
00:18:22,680 --> 00:18:29,280
Regarding the community‚ we are very happy to see new hardwares emerging in the past year． 

118
00:18:30,150 --> 00:18:36,930
The first one is Ant SDR‚ which is a new commercial product from a Chinese company． 

119
00:18:37,380 --> 00:18:39,870
The phone factor is quite small． 

120
00:18:40,110 --> 00:18:42,700
I guess that's why it's called an ant． 

121
00:18:44,060 --> 00:18:50,050
The main tips on board are 89 3 6 1 and zinc 7 O 20． 

122
00:18:50,680 --> 00:18:54,400
The entry level version has 89 3 6 3． 

123
00:18:54,410 --> 00:18:59,710
Instead‚ its support has been merged into Open A five mainline． 

124
00:19:00,080 --> 00:19:05,700
The price was only about $300 at the beginning on Aliexpress． 

125
00:19:06,350 --> 00:19:11,650
It's more expensive now due to the tip shortage during the past two years． 

126
00:19:13,750 --> 00:19:28,170
The second one is an 89 3 6 1 SDR hat for zylinx Pine Q board‚ which is quite cheap and widely used for Python based machine learning with IPG acceleration． 

127
00:19:29,100 --> 00:19:35,980
The solution is from a Chinese hobbyist and supposed to be also very cheap． 

128
00:19:36,320 --> 00:19:44,510
He has run Open My five successfully on the Pine Q and SDR hat‚ which is made by himself． 

129
00:19:45,540 --> 00:20:01,780
The interesting thing about this design is that the HDM I and P mode IOP of the Pine Q board are converted to LVDS pairs to transfer the high speed IQ sample between the pan Q board and 89 3 6 1． 

130
00:20:03,630 --> 00:20:06,920
The last one is also from a Chinese maker． 

131
00:20:07,240 --> 00:20:12,800
The design is by kikat‚ which is the most popular open source hardware design． 

132
00:20:12,810 --> 00:20:13,750
E D a tool． 

133
00:20:14,490 --> 00:20:18,270
The USBC dongle looks quite decent and compact． 

134
00:20:18,630 --> 00:20:21,780
I hope it could become real in the future． 

135
00:20:22,860 --> 00:20:32,540
In the first time 2021‚ I mentioned that low cost hardware was essential and expected for many entry level users． 

136
00:20:32,850 --> 00:20:42,810
Now the dream is becoming real for the entry level of WiFi board‚ the price has become half of what it was before． 

137
00:20:43,460 --> 00:20:54,290
I believe there will be more and more open WiFi hardware in the future about the new papers and applications from the user community． 

138
00:20:55,370 --> 00:21:00,250
Do check out the publication and application note directories on our GitHub． 

139
00:21:01,120 --> 00:21:09,590
Here is a list of those works from our users‚ such as the fuzzing tool for security research． 

140
00:21:10,270 --> 00:21:20,110
Well‚ this time sensitive network software‚ defined network and the master thesis that tried to buy to mymo successfully． 

141
00:21:21,800 --> 00:21:28,920
Regarding our current focus‚ the first one is about improving maturity of our design． 

142
00:21:29,960 --> 00:21:35,590
It is not a fancy and exciting concept‚ but lots of hard work． 

143
00:21:35,600 --> 00:21:44,770
I won't explain the detailed work‚ but I'd like to share with you a story I like very much to explain． 

144
00:21:45,360 --> 00:21:47,080
Let me ask you a question． 

145
00:21:47,800 --> 00:21:49,590
How to draw a horse． 

146
00:21:49,960 --> 00:21:52,460
Actually‚ you only need five steps． 

147
00:21:52,470 --> 00:21:55,140
Step 1‚ draw two circles． 

148
00:21:55,310 --> 00:21:57,790
Step two‚ draw legs． 

149
00:21:57,800 --> 00:22:00,940
Step 3‚ draw face and ​‌​‌​​‌‌​​‌‌​​‌‌‌​​‌‌‌​‌​‌‌‌​​‌‌​​‌‌​​‌‌​‌‌‌‌‌​‌​‌‌‌‌‌​‌‌​​‌‌‌​‌‌‌​‌‌‌​‌​​‌‌​​‌‌​​‌‌​​‌‌​‌​‌‌‌​‌‌​​‌‌‌​‌‌​​‌‌‌​‌‌​‌‌‌‌​‌​‌​‌​​‌‌‌​​‌‌‌​‌​‌‌​​​‌‌​​​‌​​‌‌​‌​‌‌‌​‌‌​​‌‌‌​‌‌​​‌‌‌​‌‌​​‌​​‌‌​‌‌​​​‌‌​‌​‌‌‌​‌​‌​‌‌‌​‌​​‌‌​​‌‌​‌​‌​​‌‌‌​​‌​​‌‌​‌‌​​​‌‌​‌​‌‌‌​‌​‌​‌​​‌‌​‌​‌​​‌‌‌‌‌‌​​‌‌‌​‌‌​​‌‌​‌‌‌​​‌‌​‌‌‌‌‌​‌​‌‌​​​‌‌​‌‌‌​​‌‌​‌‌‌‌‌​‌​‌‌​​​‌‌​‌‌‌‌‌​‌‌‌​‌​​‌‌​‌‌‌‌‌​‌‌‌​‌​​‌‌​​‌‌‌‌​‌​‌​‌‌‌​‌‌​​‌‌‌​‌​‌‌​​​‌‌​​‌‌​​‌‌‌‌​‌​​‌‌‌‌‌‌​​‌‌​‌​‌​​‌‌​​​‌​​‌‌‌‌‌‌​​‌‌‌​​‌​​‌‌‌‌​‌‌‌​‌​​‌‌​​‌‌‌​‌‌​​‌‌‌‌‌​​​‌‌‌​​‌​​‌‌‌‌​‌‌‌​‌‌​‌‌​​‌‌‌‌​‌​​‌‌‌‌​‌​​‌‌‌​‌‌‌‌​‌​‌‌‌‌‌​‌‌‌‌‌​​‌‌​‌‌‌‌‌​‌​‌‌‌​​‌‌​​​‌​​‌‌‌​​‌‌‌​‌‌​​‌​​‌‌​‌​‌‌‌​‌‌​​‌‌‌​‌​​‌‌​​‌‌‌‌‌‌​​‌‌‌​​‌‌‌​‌​​‌‌​​‌‌‌‌‌‌​​‌‌‌​​‌​​‌‌​‌‌‌​​‌‌‌​‌‌‌‌​‌​​​‌​​‌‌​​‌‌​​‌‌​‌​‌​​‌‌​‌‌​​​‌‌​‌​‌‌‌​‌​‌​‌‌‌​‌‌‌​‌​​‌‌​‌‌‌​​‌‌​‌‌‌​​‌‌‌​‌‌‌‌​‌​‌‌‌​​‌‌​‌‌‌‌‌​‌‌‌​‌​​‌‌​​‌‌‌‌​‌‌​‌‌​​‌‌‌‌‌​​​‌‌‌​‌‌‌‌​‌‌‌​‌‌‌​‌‌‌​‌‌‌​‌‌​​‌​​‌‌​‌​‌‌‌​‌​‌‌‌​​‌‌​‌‌​​​‌‌‌‌​‌‌‌​‌​‌‌‌​​‌‌‌‌‌​​​‌‌‌‌‌​​​‌‌‌‌‌‌​​‌‌‌​​‌​​‌‌​‌​‌‌‌​‌​‌‌‌​​‌‌​‌‌‌​​‌‌‌​​‌‌‌​‌‌‌‌​​​‌‌‌‌‌‌​​‌‌‌‌‌‌​​‌‌​‌‌‌​​‌‌​‌‌​​​‌‌‌​‌‌‌‌​‌‌​​‌​​‌‌​​‌‌​​‌‌‌​​‌​​‌‌‌​​‌​​‌‌​‌​‌‌‌​‌‌‌‌‌‌‌‌‌feet． 

150
00:22:01,120 --> 00:22:03,960
Step 4‚ draw hair． 

151
00:22:04,000 --> 00:22:07,520
Step 5‚ add some details． 

152
00:22:08,340 --> 00:22:21,720
Having an idea and building a demo sometimes only means that you finished step 1 to step 4‚ but without step 5‚ it will never come true． 

153
00:22:21,720 --> 00:22:28,830
True‚ the next focus is WiFi 6 8 O2 dot 11 a x． 

154
00:22:29,430 --> 00:22:41,110
We have built the WiFi 6 transmitter which is under testing and optimization with the help of the RN SC MW 270 tester． 

155
00:22:41,850 --> 00:22:57,920
WiFi 6 defines different types of physical layer PDU for the first time in the WiFi standard‚ we have implemented the single user Phi PDU‚ which can be used for single user uplink and down link． 

156
00:22:58,500 --> 00:23:22,310
The multi user 5 PDU‚ which is for AP to multiple stations simultaneously via OFDM a‚ the trigger based 5 PDU‚ which is for multiple stations to AP simultaneously via OFDM a‚ we will start to implement the receiver in 2022． 

157
00:23:23,480 --> 00:23:34,800
The future plan‚ of course‚ the first thing will be the WiFi 6 receiver‚ which will be hard‚ but we still plan to go for it． 

158
00:23:34,810 --> 00:23:37,370
If you want to help‚ just let me know． 

159
00:23:38,200 --> 00:23:47,490
Next‚ we will also continue to support our user community regarding new ideas‚ new applications‚ new hardwares‚ etc．． 

160
00:23:48,960 --> 00:23:53,640
Last but not least‚ add some details． 

161
00:23:56,150 --> 00:23:58,470
That is all for the presentation． 

162
00:23:58,690 --> 00:24:01,390
But don't leave not finish yet． 

163
00:24:01,490 --> 00:24:07,140
I have made a short video to recap the exciting moment of open WiFi in the past year． 

164
00:24:07,670 --> 00:24:08,870
Please watch‚ watch． 

165
00:24:55,790 --> 00:24:58,590
Alright‚ hello． 

166
00:24:59,190 --> 00:25:01,200
Hey‚ very yes． 

167
00:25:01,480 --> 00:25:02,000
And you will be． 

168
00:25:02,570 --> 00:25:04,880
Yes‚ but I think we are live． 

169
00:25:05,230 --> 00:25:11,310
Well‚ first of all‚ thank you very much for this‚ very interesting update on a very interesting project． 

170
00:25:11,450 --> 00:25:15,430
I'm all interested‚ I'm always looking a lot forward to your work． 

171
00:25:16,400 --> 00:25:16,590
Yes． 

172
00:25:17,050 --> 00:25:20,520
I mean yes‚ but I think we are live． 

173
00:25:22,280 --> 00:25:24,300
I have‚ I have some echoes． 

174
00:25:24,310 --> 00:25:25,960
Anybody else having those echoes? 

175
00:25:25,970 --> 00:25:28,960
I think now it's okay because I have two windows． 

176
00:25:29,170 --> 00:25:30,250
Okay‚ perfect． 

177
00:25:31,560 --> 00:25:31,970
Yeah． 

178
00:25:32,010 --> 00:25:33,800
Always looking forward to your talks． 

179
00:25:33,800 --> 00:25:35,120
Always very interesting． 

180
00:25:35,220 --> 00:25:38,140
So we have a couple of questions lined up here． 

181
00:25:40,520 --> 00:25:42,330
First one is by Andre． 

182
00:25:42,930 --> 00:25:49,620
He's asking‚ how does the performance and functionality of open WiFi compared to regular commercial ship sets? 

183
00:25:49,620 --> 00:25:51,070
Now‚ I guess you will answer it． 

184
00:25:52,040 --> 00:25:53,430
Quite a bit of that already in your talk． 

185
00:25:53,470 --> 00:25:57,530
Or maybe you can elaborate a little bit more for the art performance． 

186
00:25:57,530 --> 00:26:01,830
I think‚ is similar‚ but we don't have PA‚ so the TX power is low． 

187
00:26:02,000 --> 00:26:07,200
Regarding the throughput‚ I think we are also similar in the release． 

188
00:26:07,760 --> 00:26:09,070
We will release soon． 

189
00:26:09,580 --> 00:26:24,580
I think the physical layer could achieve‚ around 70 mega BPS if you run a perf‚ considering all the overhead‚ you can have around 50 BPS more or less similar to the commercial WiFi for a single attendance chip‚ I think． 

190
00:26:25,800 --> 00:26:27,540
Okay‚ that sounds really good． 

191
00:26:27,880 --> 00:26:33,870
And I guess that also answers Johannes question‚ who was asking which speeds are supported so far? 

192
00:26:35,420 --> 00:26:39,600
We have another question lined up‚ by Jimin． 

193
00:26:40,950 --> 00:26:49,480
He's asking why basic WiFi chips looks so small‚ but all WiFi requires roughly eightyfive elements． 

194
00:26:49,750 --> 00:27:02,820
Actually‚ eightyfive loot‚ includes lots of‚ not necessary and logic like those‚ 89 3 6 1 interfacing‚ etcetera for the core open life and logic． 

195
00:27:02,830 --> 00:27:08,040
If you look at the vivado report it consume‚ I think less than 20K route． 

196
00:27:09,250 --> 00:27:12,686
Okay‚ so it's‚ it's actually a logo number． 

197
00:27:12,950 --> 00:27:15,065
And then we have one from Daniel． 

198
00:27:15,329 --> 00:27:21,409
Daniel is asking‚ do you use the P L 3‚ 3‚ 0 DMA in the zoom? 

199
00:27:21,409 --> 00:27:25,840
Or do you have ADMA implemented‚ and FGA fabric? 

200
00:27:26,080 --> 00:27:35,040
Well‚ I don't think we are using PR social 0 DMA‚ because I'm using the A X I streaming DMA in the IPG site． 

201
00:27:35,320 --> 00:27:42,640
We have the a x I streaming DMA block‚ and it connects to the zinc arm processor HP port． 

202
00:27:42,680 --> 00:27:48,420
There are HP 0 to HP 3‚ and some of them also connect to the ACP port． 

203
00:27:48,730 --> 00:27:55,210
I think PLL‚ p L 3 3 is 0 DMA is another DMA module‚ not the one we are using． 

204
00:27:56,400 --> 00:27:58,010
Okay‚ okay‚ I see． 

205
00:27:58,010 --> 00:28:01,500
I guess that's the well then with another remark． 

206
00:28:01,510 --> 00:28:01,970
Okay‚ yeah． 

207
00:28:02,670 --> 00:28:04,180
But I guess that's the questions． 

208
00:28:04,180 --> 00:28:06,340
Your honor's question was basically answered． 

209
00:28:06,610 --> 00:28:08,740
Which speeds are supported so far? 

210
00:28:08,840 --> 00:28:09,560
Let me check． 

211
00:28:10,000 --> 00:28:11,767
Any other questions? 

212
00:28:12,062 --> 00:28:13,240
Yes‚ for the WiFi． 

213
00:28:13,240 --> 00:28:17,365
4 speed indeed is close to the WiFi 14． 

214
00:28:17,660 --> 00:28:23,670
The 5‚ 5‚ 6 we are doing‚ we target‚ still the 20 micros as well． 

215
00:28:24,050 --> 00:28:31,460
So the peak speed won't be increase a lot because the bandwidth is there． 

216
00:28:31,710 --> 00:28:33,680
Yeah‚ I see． 

217
00:28:34,220 --> 00:28:35,780
And we have to like 30 seconds． 

218
00:28:36,270 --> 00:28:37,790
Left me 1 question for my set． 

219
00:28:37,960 --> 00:28:41,540
Like‚ how big is the team that's currently working on the project? 

220
00:28:42,580 --> 00:28:51,940
I think‚ in the past few years‚ we have‚ like 2‚ PhD‚ and‚ 2 postdoc now． 

221
00:28:51,940 --> 00:28:54,210
One of the P H D's already postdoc． 

222
00:28:54,520 --> 00:28:59,710
And now last year we have new a fresh PhD joined from Netherlands‚ actually 20． 
